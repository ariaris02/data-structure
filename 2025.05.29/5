#include <stdio.h>
#define MAX_HEAP_SIZE 100

int heap[MAX_HEAP_SIZE];
int heap_size = 0;

// 최대 힙에 삽입
void insertHeap(int item) {
    int i = ++heap_size;
    while (i != 1 && item > heap[i / 2]) {
        heap[i] = heap[i / 2];
        i /= 2;
    }
    heap[i] = item;
}

// 최대 힙에서 삭제 (루트 반환)
int deleteHeap() {
    int parent, child;
    int item, temp;

    item = heap[1];
    temp = heap[heap_size--];
    parent = 1;
    child = 2;

    while (child <= heap_size) {
        if (child < heap_size && heap[child] < heap[child + 1])
            child++;
        if (temp >= heap[child])
            break;
        heap[parent] = heap[child];
        parent = child;
        child *= 2;
    }
    heap[parent] = temp;
    return item;
}

int main() {
    int data[] = {27, 15, 35, 7, 19, 1, 49, 87, 65, 12};
    int n = sizeof(data) / sizeof(data[0]);

    printf("2024-05-22, 24115960, 백수진\n");

    // 삽입
    for (int i = 0; i < n; i++) {
        insertHeap(data[i]);
    }

    // 힙 출력
    printf("Heap : ");
    for (int i = 1; i <= heap_size; i++) {
        printf("[%d] ", heap[i]);
    }
    printf("\n");

    // 삭제 (정렬)
    while (heap_size > 0) {
        printf("delete : [%d]\n", deleteHeap());
    }
    printf("\n");

    return 0;
}
