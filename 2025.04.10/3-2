#include <stdio.h>
#define Max_degree 120

typedef struct {
    float coef;
    int exp;
} Term;

typedef struct {
    int count;
    Term term[Max_degree];
} poly;

poly poly_add(poly A, poly B) {
    poly C;
    int A_pt = 0, B_pt = 0, C_pt = 0;

    while ((A_pt < A.count) && (B_pt < B.count)) {
        if (A.term[A_pt].exp == B.term[B_pt].exp) {
            float sum = A.term[A_pt].coef + B.term[B_pt].coef;
            if (sum != 0) {
                C.term[C_pt].coef = sum;
                C.term[C_pt].exp = A.term[A_pt].exp;
                C_pt++;
            }
            A_pt++; B_pt++;
        } else if (A.term[A_pt].exp > B.term[B_pt].exp) {
            C.term[C_pt] = A.term[A_pt];
            A_pt++; C_pt++;
        } else {
            C.term[C_pt] = B.term[B_pt];
            B_pt++; C_pt++;
        }
    }

    while (A_pt < A.count)
        C.term[C_pt++] = A.term[A_pt++];

    while (B_pt < B.count)
        C.term[C_pt++] = B.term[B_pt++];

    C.count = C_pt;
    return C;
}

void printPoly(poly P) {
    for (int i = 0; i < P.count; i++) {
        printf("%1.0fx^%d", P.term[i].coef, P.term[i].exp);
        if (i != P.count - 1)
            printf(" + ");
    }
    printf("\n");
}

int main() {
    printf("2025-04-10, 24115960, 백수진\n");


    poly A = { 2, { {1, 10}, {4, 1} } };
    poly B = { 3, { {3, 5}, {-6, 1}, {-7, 0} } };
    poly C;
    
    C = poly_add(A,B);

    printf("A(x) = "); printPoly(A);
    printf("B(x) = "); printPoly(B);
    printf("C(x) = "); printPoly(C);

    printf("A(x)의 항의 수 : %d\n", A.count);
    printf("B(x)의 항의 수 : %d\n", B.count);
    printf("C(x)의 항의 수 : %d\n", C.count);

    return 0;
}
