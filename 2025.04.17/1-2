#include<stdio.h>
#define Max(a,b) ( ((a) > (b)) ? (a):(b) )
#define Max_degree 120

typedef struct poly {
	int degree;
	float coef[Max_degree];
} poly;

poly poly_add(poly A, poly B) {
	poly C;
	int A_ptr = 0, B_ptr = 0, C_ptr = 0;
	int a_deg = A.degree;
	int b_deg = B.degree;
	C.degree = Max(A.degree, B.degree);

	while (A_ptr <= A.degree && B_ptr <= B.degree)
	{
		if (a_deg > b_deg)
		{
			C.coef[C_ptr++] = A.coef[A_ptr++];
			a_deg--;
		}
		else if (a_deg == b_deg)
		{
			C.coef[C_ptr++] = A.coef[A_ptr++] + B.coef[B_ptr++];
			a_deg--;
			b_deg--;
		}
		else
		{
			C.coef[C_ptr++] = B.coef[B_ptr++];
			b_deg--;
		}
	}
	return C;
}
void printPoly(poly P)
{
	int i, degree;
	degree = P.degree;

	for (i = 0; i <= P.degree; i++)
		printf("%1.0fx^%d  ", P.coef[i], degree--);
	printf("\n");
}

int main() {
	poly A = { 10, {1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0} };
	poly B = { 5, {3, 0, 0, -6, -7} };
	poly C = { 10, {1, 0, 0, 0, 0, 3, 0, 0, 0, -2, -7} };


    printf("2025-04-17, 24115960, 백수진\n");
	printf(" A(x) = "); printPoly(A);
	printf(" B(x) = "); printPoly(B);
	printf(" C(x) = "); printPoly(C);
}